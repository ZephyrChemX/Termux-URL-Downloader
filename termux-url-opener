#!/data/data/com.termux/files/usr/bin/bash
# termux-url-opener : Share → Termux universal downloader
# Sites: YouTube, TikTok, Instagram, Twitter/X, Reddit, Bilibili, Facebook, SoundCloud, Twitch
# MP4 (subtitle→resolusi, tanpa embed thumbnail), MP3 (embed thumbnail), Thumbnail Only
# Auto: aria2c OFF for YouTube, ON (x4) for others

set -e

is_playlist_url() {
  echo "$1" | grep -qiE '(\?|&)list='
}

# Aria2c konservatif
ARIA_ARGS='aria2c:-x4 -s4 -k1M --file-allocation=none --summary-interval=0 --retry-wait=2 --max-tries=10'

# Cookies (opsional)
YT_COOKIES="/sdcard/Download/youtube_cookies.txt"
IG_COOKIES="/sdcard/Download/instagram_cookies.txt"
TW_COOKIES="/sdcard/Download/twitter_cookies.txt"
RD_COOKIES="/sdcard/Download/reddit_cookies.txt"
BB_COOKIES="/sdcard/Download/bilibili_cookies.txt"
FB_COOKIES="/sdcard/Download/facebook_cookies.txt"
SC_COOKIES="/sdcard/Download/soundcloud_cookies.txt"
TC_COOKIES="/sdcard/Download/twitch_cookies.txt"

# Folder output
mkdir -p /sdcard/Movies/YouTube \
         /sdcard/Movies/TikTok \
         /sdcard/Movies/Instagram \
         /sdcard/Movies/Twitter \
         /sdcard/Movies/Reddit \
         /sdcard/Movies/Bilibili \
         /sdcard/Movies/Facebook \
         /sdcard/Movies/SoundCloud \
         /sdcard/Movies/Twitch \
         /sdcard/Music \
         /sdcard/Pictures/Thumbnails

# Helper submenu: subtitle
pick_subs() {
  echo "Pilih subtitle:"
  echo "1) Indonesia"
  echo "2) English"
  echo "3) Japanese"
  echo "4) Tanpa subtitle"
  read -r -p "Masukkan pilihan [1/2/3/4]: " sub_choice
  case "$sub_choice" in
    1) SUB_OPTS=(--write-subs --sub-lang id --embed-subs) ;;
    2) SUB_OPTS=(--write-subs --sub-lang en --embed-subs) ;;
    3) SUB_OPTS=(--write-subs --sub-lang ja --embed-subs) ;;
    *) SUB_OPTS=() ;;
  esac
}

# Helper submenu: resolusi
pick_res() {
  echo "Pilih resolusi:"
  echo "1) Terbaik (best available)"
  echo "2) 1080p (prioritas 60fps)"
  echo "3) 720p  (prioritas 60fps)"
  echo "4) 480p"
  read -r -p "Masukkan pilihan [1/2/3/4]: " res_choice
  case "$res_choice" in
    1) FMT="bestvideo+bestaudio/best" ;;
    2) FMT="bestvideo[height<=1080][fps<=60]+bestaudio/best[height<=1080][fps<=60]" ;;
    3) FMT="bestvideo[height<=720][fps<=60]+bestaudio/best[height<=720][fps<=60]" ;;
    4) FMT="bestvideo[height<=480]+bestaudio/best[height<=480]" ;;
    *) FMT="bestvideo+bestaudio/best" ;;
  esac
}

for url in "$@"; do
  # Tentukan folder, cookies, & downloader
  if echo "$url" | grep -qi 'tiktok\.com'; then
    OUT_MP4_BASE="/sdcard/Movies/TikTok"; COOKIE_OPT=(); DOWNLOADER=(--downloader aria2c --downloader-args "$ARIA_ARGS")
  elif echo "$url" | grep -qi 'instagram\.com'; then
    OUT_MP4_BASE="/sdcard/Movies/Instagram"; [ -f "$IG_COOKIES" ] && COOKIE_OPT=(--cookies "$IG_COOKIES") || COOKIE_OPT=(); DOWNLOADER=(--downloader aria2c --downloader-args "$ARIA_ARGS")
  elif echo "$url" | grep -qiE 'twitter\.com|x\.com'; then
    OUT_MP4_BASE="/sdcard/Movies/Twitter";  [ -f "$TW_COOKIES" ] && COOKIE_OPT=(--cookies "$TW_COOKIES") || COOKIE_OPT=(); DOWNLOADER=(--downloader aria2c --downloader-args "$ARIA_ARGS")
  elif echo "$url" | grep -qi 'reddit\.com'; then
    OUT_MP4_BASE="/sdcard/Movies/Reddit";   [ -f "$RD_COOKIES" ] && COOKIE_OPT=(--cookies "$RD_COOKIES") || COOKIE_OPT=(); DOWNLOADER=(--downloader aria2c --downloader-args "$ARIA_ARGS")
  elif echo "$url" | grep -qi 'bilibili\.com'; then
    OUT_MP4_BASE="/sdcard/Movies/Bilibili"; [ -f "$BB_COOKIES" ] && COOKIE_OPT=(--cookies "$BB_COOKIES") || COOKIE_OPT=(); DOWNLOADER=(--downloader aria2c --downloader-args "$ARIA_ARGS")
  elif echo "$url" | grep -qi 'facebook\.com'; then
    OUT_MP4_BASE="/sdcard/Movies/Facebook"; [ -f "$FB_COOKIES" ] && COOKIE_OPT=(--cookies "$FB_COOKIES") || COOKIE_OPT=(); DOWNLOADER=(--downloader aria2c --downloader-args "$ARIA_ARGS")
  elif echo "$url" | grep -qi 'soundcloud\.com'; then
    OUT_MP4_BASE="/sdcard/Movies/SoundCloud"; [ -f "$SC_COOKIES" ] && COOKIE_OPT=(--cookies "$SC_COOKIES") || COOKIE_OPT=(); DOWNLOADER=(--downloader aria2c --downloader-args "$ARIA_ARGS")
  elif echo "$url" | grep -qi 'twitch\.tv'; then
    OUT_MP4_BASE="/sdcard/Movies/Twitch"; [ -f "$TC_COOKIES" ] && COOKIE_OPT=(--cookies "$TC_COOKIES") || COOKIE_OPT=(); DOWNLOADER=(--downloader aria2c --downloader-args "$ARIA_ARGS")
  elif echo "$url" | grep -qi 'youtu'; then
    OUT_MP4_BASE="/sdcard/Movies/YouTube";  [ -f "$YT_COOKIES" ] && COOKIE_OPT=(--cookies "$YT_COOKIES") || COOKIE_OPT=(); DOWNLOADER=()   # YouTube tanpa aria2c
  else
    OUT_MP4_BASE="/sdcard/Movies"; COOKIE_OPT=(); DOWNLOADER=(--downloader aria2c --downloader-args "$ARIA_ARGS")
  fi

  echo $'\n'"Pilih format:"
  echo "1) MP4 (subtitle + resolusi)"
  echo "2) MP3 (audio, embed thumbnail)"
  echo "3) Thumbnail saja (format asli)"
  read -r -p "Masukkan pilihan [1/2/3]: " choice

  if is_playlist_url "$url"; then
    case "$choice" in
      1)  # PLAYLIST → MP4
        pick_subs
        pick_res
        yt-dlp --yes-playlist \
          -f "$FMT" --merge-output-format mp4 \
          "${SUB_OPTS[@]}" \
          -o "${OUT_MP4_BASE}/%(playlist_title)s/%(playlist_index)03d - %(title).60s.%(ext)s" \
          "${DOWNLOADER[@]}" "${COOKIE_OPT[@]}" "$url"
        ;;
      2)  # PLAYLIST → MP3
        yt-dlp --yes-playlist \
          -x --audio-format mp3 --audio-quality 0 --embed-thumbnail \
          -o "/sdcard/Music/%(playlist_title)s/%(playlist_index)03d - %(title).60s.%(ext)s" \
          "${DOWNLOADER[@]}" "${COOKIE_OPT[@]}" "$url"
        ;;
      3)  # PLAYLIST → Thumbnail Only
        yt-dlp --yes-playlist \
          --skip-download --write-thumbnail --convert-thumbnails "" \
          -o "/sdcard/Pictures/Thumbnails/%(playlist_title)s/%(playlist_index)03d - %(title).60s" \
          "${COOKIE_OPT[@]}" "$url"
        ;;
      *) echo "Pilihan tidak valid."; exit 1 ;;
    esac
  else
    case "$choice" in
      1)  # NON-PLAYLIST → MP4
        DURATION=$(yt-dlp --no-playlist --print duration "$url" 2>/dev/null | head -n1 | cut -d. -f1)
        if [ -n "$DURATION" ] && [ "$DURATION" -lt 60 ]; then
          FMT="bestvideo+bestaudio/best"
          SUB_OPTS=()
        else
          pick_subs
          pick_res
        fi
        yt-dlp --no-playlist \
          -f "$FMT" --merge-output-format mp4 \
          "${SUB_OPTS[@]}" \
          -o "${OUT_MP4_BASE}/%(title).60s.%(ext)s" \
          "${DOWNLOADER[@]}" "${COOKIE_OPT[@]}" "$url"
        ;;
      2)  # NON-PLAYLIST → MP3
        yt-dlp --no-playlist \
          -x --audio-format mp3 --audio-quality 0 --embed-thumbnail \
          -o "/sdcard/Music/%(title).60s.%(ext)s" \
          "${DOWNLOADER[@]}" "${COOKIE_OPT[@]}" "$url"
        ;;
      3)  # NON-PLAYLIST → Thumbnail Only
        yt-dlp --no-playlist \
          --skip-download --write-thumbnail --convert-thumbnails "" \
          -o "/sdcard/Pictures/Thumbnails/%(title).60s" \
          "${COOKIE_OPT[@]}" "$url"
        ;;
      *) echo "Pilihan tidak valid."; exit 1 ;;
    esac
  fi
done

echo "✅ Selesai."

